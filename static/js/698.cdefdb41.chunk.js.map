{"version":3,"file":"static/js/698.cdefdb41.chunk.js","mappings":"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","sources":["hooks/useToggler.jsx","components/Accordion/Accordion.jsx","components/Error/Error.jsx","components/Main/Main.jsx","components/Carousel/Carousel.jsx","components/SimpleList/SimpleList.jsx","components/RatingItem/RatingItem.jsx","components/Rating/Rating.jsx","components/Host/Host.jsx","pages/Housing/Housing.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useState } from 'react'\n\nfunction useToggler(defaultOnValue = false) {\n  const [isToggledOn, setIsToggledOn] = useState(defaultOnValue)\n\n  function toggle() {\n    setIsToggledOn((prev) => !prev)\n  }\n\n  return [isToggledOn, toggle]\n}\n\nexport default useToggler\n\nuseToggler.proptype = {\n  defaultOnValue: PropTypes.bool,\n}\n","import PropTypes from 'prop-types'\nimport useToggler from '../../hooks/useToggler'\nimport './Accordion.css'\n\nfunction Accordion({\n  children,\n  title,\n  theme = 'accordion--default',\n  className = '',\n  open = false,\n}) {\n  const [isOpen, toggle] = useToggler(open)\n  const statusClassName = isOpen ? 'accordion-open' : 'accordion-close'\n\n  return (\n    <div className={`accordion ${theme} ${className}`}>\n      <button\n        aria-expanded={isOpen}\n        aria-controls={`${title}-panel`}\n        className={`accordion__button ${statusClassName}`}\n        onClick={toggle}\n        id={`${title}-title`}\n      >\n        {title}\n      </button>\n      <div\n        className=\"accordion__panel\"\n        id={`${title}-panel`}\n        role=\"region\"\n        aria-labelledby={`${title}-title`}\n      >\n        <div className=\"accordion__content\">{children}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Accordion\n\nAccordion.proptype = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  theme: PropTypes.string,\n  className: PropTypes.string,\n  on: PropTypes.bool,\n}\n","function Error() {\n  return <h3>Une erreur est survenue</h3>\n}\n\nexport default Error\n","import PropTypes from 'prop-types'\n\nfunction Main({ children, theme = 'main--default', className }) {\n  return (\n    <main className={`main ${theme} ${className}`} id=\"main\">\n      {children}\n    </main>\n  )\n}\n\nexport default Main\n\nMain.proptype = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.string,\n  className: PropTypes.string,\n}\n","import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport './Carousel.css'\n\nfunction Carousel({ theme = 'carousel--default', className = '', pictures }) {\n  const [current, setCurrent] = useState(0)\n  const [currents, setCurrents] = useState([0])\n  const length = pictures.length\n\n  useEffect(() => {\n    if (length > 2) {\n      if (current === 0) setCurrents([length - 1, current, current + 1])\n      else if (current === length - 1) setCurrents([current - 1, current, 0])\n      else setCurrents([current - 1, current, current + 1])\n    } else if (length === 2) setCurrents([current, current + 1])\n    else setCurrents([current])\n  }, [current, length])\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1)\n  }\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1)\n  }\n\n  const pictureElements = currents.map((value) => (\n    <div className=\"carousel__item\" key={`carousel-${pictures[value]}`}>\n      <img className=\"carousel__img\" src={pictures[value]} alt=\"\" />\n    </div>\n  ))\n  return (\n    <div className={`carousel ${theme} ${className}`}>\n      {pictureElements}\n      <button onClick={prevSlide} className=\"carousel__btn carousel__btn-prev\">\n        <span className=\"carousel__btn__text\">previous picture</span>\n      </button>\n      <button onClick={nextSlide} className=\"carousel__btn carousel__btn-next\">\n        <span className=\"carousel__btn__text\">next picture</span>\n      </button>\n    </div>\n  )\n}\n\nexport default Carousel\n\nCarousel.proptype = {\n  className: PropTypes.string,\n  pictures: PropTypes.arrayOf(PropTypes.string),\n}\n","import PropTypes from 'prop-types'\nimport './SimpleList.css'\n\nfunction SimpleList({\n  array,\n  theme = 'simple-list--default',\n  listClassName = '',\n  itemClassName = '',\n}) {\n  const listItemElements = array.map((item, index) => (\n    <li key={`listItem-${index}`} className={itemClassName}>\n      {item}\n    </li>\n  ))\n  return <ul className={`${theme} ${listClassName}`}>{listItemElements}</ul>\n}\n\nexport default SimpleList\n\nSimpleList.propTypes = {\n  array: PropTypes.array.isRequired,\n  theme: PropTypes.string,\n  listClassName: PropTypes.string,\n  itemClassName: PropTypes.string,\n}\n","import PropTypes from 'prop-types'\nimport './RatingItem.css'\n\nfunction RatingItem({\n  value = 'star',\n  checked = false,\n  visualyCheck = false,\n  handleRating,\n}) {\n  return (\n    <label className=\"rating-star__form-control\">\n      <input\n        className=\"rating-star__input\"\n        name=\"rating\"\n        type=\"radio\"\n        value={value}\n        checked={checked}\n        data-visualycheck={visualyCheck}\n        onChange={handleRating}\n      />\n      <span className=\"rating__text\">\n        {value > 1 ? `${value} stars` : '1 star'}\n      </span>\n    </label>\n  )\n}\n\nexport default RatingItem\n\nRatingItem.proptype = {\n  value: PropTypes.string,\n  checked: PropTypes.bool,\n  visualyCheck: PropTypes.bool,\n  handleRating: PropTypes.func.isRequired,\n}\n","import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport RatingItem from '../RatingItem/RatingItem'\n\nfunction Rating({ rating, className, theme = 'rating__default' }) {\n  const [ratingValue, setRatingValue] = useState(rating)\n\n  function handleRating(value) {\n    setRatingValue(value)\n  }\n\n  function createRatingElements(ratingValue) {\n    const maxRating = 5\n    const ratingElements = []\n\n    for (let i = 1; i <= maxRating; i++) {\n      const checked = i === ratingValue ? true : false\n      const visualyCheck = i <= ratingValue ? true : false\n\n      ratingElements.push(\n        <RatingItem\n          key={`ratingItem-${i}`}\n          value={i}\n          checked={checked}\n          visualyCheck={visualyCheck}\n          handleRating={() => handleRating(i)}\n        />\n      )\n    }\n\n    return ratingElements\n  }\n\n  const ratingElements = createRatingElements(ratingValue)\n\n  return (\n    <fieldset className={`rating ${theme} ${className}`}>\n      <legend className=\"rating__legend\">Votre note:</legend>\n      {ratingElements}\n    </fieldset>\n  )\n}\n\nexport default Rating\n\nRating.proptype = {\n  rating: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  theme: PropTypes.string,\n}\n","import PropTypes from 'prop-types'\nimport './Host.css'\n\nfunction Host({ host, className = 'host__default' }) {\n  return (\n    <div className={className}>\n      <p className=\"host__name\">{host.name}</p>\n      <img className=\"host__photo\" src={host.picture} alt=\"\" />\n    </div>\n  )\n}\n\nexport default Host\n\nHost.proptype = {\n  host: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n  }),\n  className: PropTypes.string,\n}\n","import { useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { HousingContext } from '../../contexts/HousingContext'\nimport Main from '../../components/Main/Main'\nimport Carousel from '../../components/Carousel/Carousel'\nimport SimpleList from '../../components/SimpleList/SimpleList'\nimport Rating from '../../components/Rating/Rating'\nimport Host from '../../components/Host/Host'\nimport Accordion from '../../components/Accordion/Accordion'\nimport Spinner from '../../components/Spinner/Spinner'\nimport Error from '../../components/Error/Error'\nimport './Housing.css'\n\nfunction Housing() {\n  const { data, loading, error } = useContext(HousingContext)\n  const { id } = useParams()\n\n  if (loading) {\n    return <Spinner>Loading...</Spinner>\n  }\n\n  if (error) {\n    return <Error error={error} />\n  }\n\n  const housing = data?.find((item) => item.id === id)\n\n  return (\n    <Main className=\"housing__page\">\n      <Carousel className=\"housing__carousel\" pictures={housing.pictures} />\n      <h1 className=\"housing__title\">{housing.title}</h1>\n      <p className=\"housing__location\">{housing.location}</p>\n      <SimpleList\n        array={housing.tags}\n        theme=\"simple-list--housing\"\n        listClassName=\"housing__taglist\"\n      />\n      <Rating className=\"housing__rating\" rating={housing.rating} />\n      <Host className=\"housing__host\" host={housing.host} />\n      <Accordion\n        className=\"housing__accordion housing__description\"\n        title=\"Description\"\n      >\n        <p>{housing.description}</p>\n      </Accordion>\n      <Accordion\n        className=\"housing__accordion housing__equipments\"\n        title=\"Equipements\"\n      >\n        <SimpleList\n          array={housing.equipments}\n          listClassName=\"housing__equipments__list\"\n        />\n      </Accordion>\n    </Main>\n  )\n}\n\nexport default Housing\n"],"names":["useToggler","defaultOnValue","useState","isToggledOn","setIsToggledOn","toggle","prev","proptype","PropTypes","Accordion","children","title","theme","className","open","isOpen","statusClassName","onClick","id","role","on","Main","Carousel","pictures","current","setCurrent","currents","setCurrents","length","useEffect","pictureElements","map","value","src","alt","array","listClassName","itemClassName","listItemElements","item","index","RatingItem","checked","visualyCheck","handleRating","name","type","onChange","Rating","rating","ratingValue","setRatingValue","ratingElements","i","push","createRatingElements","Host","host","picture","useContext","HousingContext","data","loading","error","useParams","Spinner","Error","housing","find","location","tags","description","equipments"],"sourceRoot":""}