{"version":3,"file":"static/js/349.37995255.chunk.js","mappings":"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","sources":["utils/hooks/useToggler.jsx","components/Accordion/index.jsx","../node_modules/nanoid/index.browser.js","components/Error/index.jsx","components/Main/index.jsx","components/Carousel/index.jsx","components/TagList/index.jsx","components/Rating/RatingStar/index.jsx","components/Rating/index.jsx","components/Host/index.jsx","components/SimpleList/index.jsx","pages/Housing/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\n\r\nfunction useToggler(defaultOnValue = false) {\r\n  const [isToggledOn, setIsToggledOn] = useState(defaultOnValue)\r\n\r\n  function toggle() {\r\n    setIsToggledOn((prev) => !prev)\r\n  }\r\n\r\n  return [isToggledOn, toggle]\r\n}\r\n\r\nexport default useToggler\r\n\r\nuseToggler.proptype = {\r\n  defaultOnValue: PropTypes.bool,\r\n}\r\n","import { nanoid } from 'nanoid'\r\nimport PropTypes from 'prop-types'\r\nimport useToggler from '../../utils/hooks/useToggler'\r\nimport './index.css'\r\n\r\nfunction Accordion({\r\n  children,\r\n  title,\r\n  theme = 'accordion--default',\r\n  className = '',\r\n  open = false,\r\n}) {\r\n  const [isOpen, toggle] = useToggler(open)\r\n  const statusClassName = isOpen ? 'accordion-open' : 'accordion-close'\r\n  const accordionId = nanoid()\r\n\r\n  return (\r\n    <section\r\n      className={`accordion ${theme} ${className}`}\r\n      aria-labelledby={`${title}-title`}\r\n    >\r\n      <button\r\n        aria-expanded={isOpen}\r\n        aria-controls={accordionId}\r\n        className={`accordion__button ${statusClassName}`}\r\n        onClick={toggle}\r\n      >\r\n        {title}\r\n      </button>\r\n      <div\r\n        className=\"accordion__panel\"\r\n        id={accordionId}\r\n        role=\"region\"\r\n        aria-labelledby={`${title}-title`}\r\n      >\r\n        <div className=\"accordion__content\">\r\n          <h2 id={`${title}-title`} className=\"accordion__title\">\r\n            {title}\r\n          </h2>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Accordion\r\n\r\nAccordion.proptype = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  theme: PropTypes.string,\r\n  className: PropTypes.string,\r\n  on: PropTypes.bool,\r\n}\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","function Error() {\r\n  return <h3>Une erreur est survenue</h3>\r\n}\r\n\r\nexport default Error\r\n","import PropTypes from 'prop-types'\r\n\r\nfunction Main({ children, theme = 'main--default', className }) {\r\n  return (\r\n    <main className={`main ${theme} ${className}`} id=\"main\">\r\n      {children}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main\r\n\r\nMain.proptype = {\r\n  children: PropTypes.node.isRequired,\r\n  theme: PropTypes.string,\r\n  className: PropTypes.string,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { useState } from 'react'\r\nimport './index.css'\r\nfunction Carousel({ theme = 'carousel--default', className = '', pictures }) {\r\n  const [current, setCurrent] = useState(0)\r\n  const length = pictures.length\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1)\r\n  }\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1)\r\n  }\r\n\r\n  const isLoaded = (index) => {\r\n    if (index === current) return true\r\n    return false\r\n  }\r\n\r\n  const pictureElements = pictures.map((picture, index) => (\r\n    <div className=\"carousel__item\" key={index}>\r\n      {isLoaded(index) && (\r\n        <img className=\"carousel__img\" src={picture} alt=\"\" />\r\n      )}\r\n    </div>\r\n  ))\r\n  return (\r\n    <div className={`carousel ${theme} ${className}`}>\r\n      <button onClick={prevSlide} className=\"carousel__btn carousel__btn-prev\">\r\n        <span className=\"carousel__btn__text\">previous picture</span>\r\n      </button>\r\n      <button onClick={nextSlide} className=\"carousel__btn carousel__btn-next\">\r\n        <span className=\"carousel__btn__text\">next picture</span>\r\n      </button>\r\n      {pictureElements}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Carousel\r\n\r\nCarousel.proptype = {\r\n  className: PropTypes.string,\r\n  pictures: PropTypes.arrayOf(PropTypes.string),\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nfunction TagList({ tags, className = 'taglist__default' }) {\r\n  const tagListElements = tags.map((tag, index) => (\r\n    <li key={index} className=\"taglist__item\">\r\n      {tag}\r\n    </li>\r\n  ))\r\n\r\n  return <ul className={className}>{tagListElements}</ul>\r\n}\r\n\r\nexport default TagList\r\n\r\nTagList.proptype = {\r\n  tags: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  className: PropTypes.string,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nfunction RatingStar({\r\n  value = 'star',\r\n  checked = false,\r\n  visualyCheck = false,\r\n  handleRating,\r\n}) {\r\n  return (\r\n    <label className=\"rating-star__form-control\">\r\n      <input\r\n        className=\"rating-star__input\"\r\n        name=\"rating\"\r\n        type=\"radio\"\r\n        value={value}\r\n        checked={checked}\r\n        data-visualycheck={visualyCheck}\r\n        onChange={handleRating}\r\n      />\r\n      <span className=\"rating__text\">\r\n        {value > 1 ? `${value} stars` : '1 star'}\r\n      </span>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default RatingStar\r\n\r\nRatingStar.proptype = {\r\n  value: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  visualyCheck: PropTypes.bool,\r\n  handleRating: PropTypes.func.isRequired,\r\n}\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport RatingStar from './RatingStar'\r\n\r\nfunction Rating({ rating, className, theme = 'rating__default' }) {\r\n  const [ratingValue, setRatingValue] = useState(rating)\r\n\r\n  function handleRating(value) {\r\n    setRatingValue(value)\r\n  }\r\n\r\n  function createRatingElements(ratingValue) {\r\n    const maxRating = 5\r\n    const ratingElements = []\r\n\r\n    for (let i = 1; i <= maxRating; i++) {\r\n      const checked = i === ratingValue ? true : false\r\n      const visualyCheck = i <= ratingValue ? true : false\r\n\r\n      ratingElements.push(\r\n        <RatingStar\r\n          key={i}\r\n          value={i}\r\n          checked={checked}\r\n          visualyCheck={visualyCheck}\r\n          handleRating={() => handleRating(i)}\r\n        />\r\n      )\r\n    }\r\n\r\n    return ratingElements\r\n  }\r\n\r\n  const ratingElements = createRatingElements(ratingValue)\r\n\r\n  return (\r\n    <fieldset className={`rating ${theme} ${className}`}>\r\n      <legend className=\"rating__legend\">Votre note:</legend>\r\n      {ratingElements}\r\n    </fieldset>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n\r\nRating.proptype = {\r\n  rating: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  theme: PropTypes.string,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nfunction Host({ host, className = 'host__default' }) {\r\n  return (\r\n    <div className={className}>\r\n      <p className=\"host__name\">{host.name}</p>\r\n      <img className=\"host__photo\" src={host.picture} alt=\"\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Host\r\n\r\nHost.proptype = {\r\n  host: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    picture: PropTypes.string.isRequired,\r\n  }),\r\n  className: PropTypes.string,\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nfunction SimpleList({\r\n  array,\r\n  theme = 'simple-list--default',\r\n  listClassName = '',\r\n  itemClassName = '',\r\n}) {\r\n  const listItemElements = array.map((item, index) => (\r\n    <li key={index} className={itemClassName}>\r\n      {item}\r\n    </li>\r\n  ))\r\n  return <ul className={`${theme} ${listClassName}`}>{listItemElements}</ul>\r\n}\r\n\r\nexport default SimpleList\r\n\r\nSimpleList.propTypes = {\r\n  array: PropTypes.array.isRequired,\r\n  theme: PropTypes.string,\r\n  listClassName: PropTypes.string,\r\n  itemClassName: PropTypes.string,\r\n}\r\n","import { useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { HousingContext } from '../../utils/contexts/HousingContext'\r\nimport Main from '../../components/Main'\r\nimport Spinner from '../../components/Spinner'\r\nimport Error from '../../components/Error'\r\nimport Carousel from '../../components/Carousel'\r\nimport TagList from '../../components/TagList'\r\nimport Rating from '../../components/Rating'\r\nimport Host from '../../components/Host'\r\nimport Accordion from '../../components/Accordion'\r\nimport SimpleList from '../../components/SimpleList'\r\nimport './index.css'\r\n\r\nfunction Housing() {\r\n  const { data, loading, error } = useContext(HousingContext)\r\n  const { id } = useParams()\r\n\r\n  if ((loading || !data || data.length === 0) && !error)\r\n    return <Spinner>Loading...</Spinner>\r\n\r\n  if (error) return <Error error={error} />\r\n\r\n  const housing = data?.find((item) => item.id === id)\r\n\r\n  return (\r\n    <Main className=\"housing__page\">\r\n      <Carousel className=\"housing__carousel\" pictures={housing.pictures} />\r\n      <h1 className=\"housing__title\">{housing.title}</h1>\r\n      <p className=\"housing__location\">{housing.location}</p>\r\n      <TagList className=\"housing__taglist\" tags={housing.tags} />\r\n      <Rating className=\"housing__rating\" rating={housing.rating} />\r\n      <Host className=\"housing__host\" host={housing.host} />\r\n      <Accordion\r\n        className=\"housing__accordion housing__description\"\r\n        title=\"Description\"\r\n      >\r\n        <p>{housing.description}</p>\r\n      </Accordion>\r\n      <Accordion\r\n        className=\"housing__accordion housing__equipments\"\r\n        title=\"Equipements\"\r\n      >\r\n        <SimpleList\r\n          array={housing.equipments}\r\n          listClassName=\"housing__equipments__list\"\r\n        />\r\n      </Accordion>\r\n    </Main>\r\n  )\r\n}\r\n\r\nexport default Housing\r\n"],"names":["useToggler","defaultOnValue","useState","isToggledOn","setIsToggledOn","toggle","prev","proptype","PropTypes","Accordion","children","title","theme","className","open","isOpen","statusClassName","accordionId","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","onClick","role","on","Main","Carousel","pictures","current","setCurrent","length","isLoaded","index","pictureElements","map","picture","src","alt","TagList","tags","tagListElements","tag","RatingStar","value","checked","visualyCheck","handleRating","name","type","onChange","Rating","rating","ratingValue","setRatingValue","ratingElements","i","push","createRatingElements","Host","host","array","listClassName","itemClassName","listItemElements","item","useContext","HousingContext","data","loading","error","useParams","Spinner","Error","housing","find","location","description","equipments"],"sourceRoot":""}