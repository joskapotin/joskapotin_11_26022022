{"version":3,"file":"static/js/979.a37c631e.chunk.js","mappings":"yMAQA,SAASA,EAAWC,GAClB,OAAsCC,EAAAA,EAAAA,UAASD,GAA/C,eAAOE,EAAP,KAAoBC,EAApB,KAMA,MAAO,CAACD,EAJR,WACEC,GAAe,SAACC,GAAD,OAAWA,OAM9B,QAEAL,EAAWM,aAAe,CACxBL,gBAAgB,GAGlBD,EAAWO,UAAY,CACrBN,eAAgBO,IAAAA,M,aCXlB,SAASC,EAAT,GAA0D,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,KAC/C,EAAyBb,EAAWa,GAApC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAkBF,EAAS,iBAAmB,kBAEpD,OACE,iBAAKF,UAAS,oBAAeA,GAA7B,WACE,mBACEK,KAAK,SACL,gBAAeH,EACf,0BAAkBH,EAAlB,UACAC,UAAS,4BAAuBI,GAChCE,QAASH,EACTI,GAAE,UAAKR,EAAL,UANJ,SAQGA,KAEH,gBACEC,UAAU,mBACVO,GAAE,UAAKR,EAAL,UACFS,KAAK,SACL,4BAAoBT,EAApB,UAJF,UAME,gBAAKC,UAAU,qBAAf,SAAqCF,SAM7C,QAEAD,EAAUH,aAAe,CACvBM,UAAW,GACXC,MAAM,I,8ECpCR,SAASQ,EAAT,GAAoC,IAApBX,EAAmB,EAAnBA,SAAUY,EAAS,EAATA,MAClBC,EAAQ,CACZC,gBAAgB,OAAD,OAASF,EAAT,MAGjB,OACE,gBAAKV,UAAU,OAAOW,MAAOA,EAA7B,SACGb,IAKP,QAEAW,EAAKf,aAAe,CAClBI,SAAU,O,8CChBZ,SAASe,EAAT,GAAwC,IAAxBf,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,UACxB,OACE,iBAAMA,UAAS,eAAUA,GAAaO,GAAG,OAAzC,SACGT,IAKP,MAEAe,EAAKnB,aAAe,CAClBM,UAAW,O,8HCyBb,MAvCA,WACE,OACE,UAACa,EAAA,EAAD,CAAMb,UAAU,cAAhB,WACE,SAACS,EAAA,EAAD,CAAMC,MAAOA,KACb,SAACb,EAAA,EAAD,CAAWE,MAAM,eAAjB,UACE,sOAMF,SAACF,EAAA,EAAD,CAAWE,MAAM,UAAjB,UACE,+MAMF,SAACF,EAAA,EAAD,CAAWE,MAAM,UAAjB,UACE,qMAMF,SAACF,EAAA,EAAD,CAAWE,MAAM,cAAjB,UACE,sd,iCCvBR,IAAIe,EAAuBC,EAAQ,IAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,GAGR,SAASG,IACP,OAAOV,EAFTA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBpC,EAChBC,kBAAmBF,GAKrB,OAFAiB,EAAerC,UAAYqC,EAEpBA,I,kBC9CPd,EAAOC,QAAUL,EAAQ,IAARA,I,4BCNnBI,EAAOC,QAFoB,gD","sources":["hooks/useToggler.jsx","components/Accordion/Accordion.jsx","components/Hero/Hero.jsx","components/Main/Main.jsx","pages/About/About.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useState } from 'react'\n\n/**\n *\n * @param {boolean} defaultOnValue - Set the default state\n * @returns\n */\nfunction useToggler(defaultOnValue) {\n  const [isToggledOn, setIsToggledOn] = useState(defaultOnValue)\n\n  function toggle() {\n    setIsToggledOn((prev) => !prev)\n  }\n\n  return [isToggledOn, toggle]\n}\n\nexport default useToggler\n\nuseToggler.defaultProps = {\n  defaultOnValue: false,\n}\n\nuseToggler.propTypes = {\n  defaultOnValue: PropTypes.bool,\n}\n","import PropTypes from 'prop-types'\nimport useToggler from '../../hooks/useToggler'\nimport './Accordion.css'\nimport './Accordion-default-theme.css'\n\n/**\n *\n * @param {Object} props\n * @param {JSX.Element} props.children - The content to render inside the accordion panel.\n * @param {string} props.title - The title of the accordion. Will be the button text.\n * @param {string} props.className - A css class that can be added to the accordion.\n * @param {boolean} props.open - The accordion default state.\n * @returns\n */\nfunction Accordion({ children, title, className, open }) {\n  const [isOpen, toggle] = useToggler(open)\n  const statusClassName = isOpen ? 'accordion-open' : 'accordion-close'\n\n  return (\n    <div className={`accordion ${className}`}>\n      <button\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-controls={`${title}-panel`}\n        className={`accordion__button ${statusClassName}`}\n        onClick={toggle}\n        id={`${title}-title`}\n      >\n        {title}\n      </button>\n      <div\n        className=\"accordion__panel\"\n        id={`${title}-panel`}\n        role=\"region\"\n        aria-labelledby={`${title}-title`}\n      >\n        <div className=\"accordion__content\">{children}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Accordion\n\nAccordion.defaultProps = {\n  className: '',\n  open: false,\n}\n\nAccordion.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  open: PropTypes.bool,\n}\n","import PropTypes from 'prop-types'\nimport './Hero.css'\n\n/**\n *\n * @param {Object} props\n * @param {JSX.Element} props.children - The content to render inside the hero.\n * @param {string} props.image - The background image of the hero.\n * @returns\n */\nfunction Hero({ children, image }) {\n  const style = {\n    backgroundImage: `url(${image})`,\n  }\n\n  return (\n    <div className=\"hero\" style={style}>\n      {children}\n    </div>\n  )\n}\n\nexport default Hero\n\nHero.defaultProps = {\n  children: null,\n}\n\nHero.propTypes = {\n  children: PropTypes.node,\n  image: PropTypes.string.isRequired,\n}\n","import PropTypes from 'prop-types'\n\n/**\n *\n * @param {Object} props\n * @param {JSX.Element} props.children - The content to display inside the component\n * @param {String} props.className - A class to add to the component\n * @returns\n */\nfunction Main({ children, className }) {\n  return (\n    <main className={`main ${className}`} id=\"main\">\n      {children}\n    </main>\n  )\n}\n\nexport default Main\n\nMain.defaultProps = {\n  className: null,\n}\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n}\n","import Main from '../../components/Main/Main'\nimport Hero from '../../components/Hero/Hero'\nimport Accordion from '../../components/Accordion/Accordion'\nimport image from '../../assets/images/hero02.png'\nimport './About.css'\n\nfunction About() {\n  return (\n    <Main className=\"about__page\">\n      <Hero image={image} />\n      <Accordion title=\"Fiabilité\">\n        <p>\n          Les annonces postées sur Kasa garantissent une fiabilité totale. Les\n          photos sont conformes aux logements, et toutes les informations sont\n          régulièrement vérifiées par nos équipes.\n        </p>\n      </Accordion>\n      <Accordion title=\"Respect\">\n        <p>\n          La bienveillance fait partie des valeurs fondatrices de Kasa. Tout\n          comportement discriminatoire ou de perturbation du voisinage\n          entraînera une exclusion de notre plateforme.\n        </p>\n      </Accordion>\n      <Accordion title=\"Service\">\n        <p>\n          Nos équipes se tiennent à votre disposition pour vous fournir une\n          expérience parfaite. N&apos;hésitez pas à nous contacter si vous avez\n          la moindre question.\n        </p>\n      </Accordion>\n      <Accordion title=\"Securité\">\n        <p>\n          La sécurité est la priorité de Kasa. Aussi bien pour nos hôtes que\n          pour les voyageurs, chaque logement correspond aux critères de\n          sécurité établis par nos services. En laissant une note aussi bien à\n          l&apos;hôte qu&apos;au locataire, cela permet à nos équipes de\n          vérifier que les standards sont bien respectés. Nous organisons\n          également des ateliers sur la sécurité domestique pour nos hôtes.\n        </p>\n      </Accordion>\n    </Main>\n  )\n}\n\nexport default About\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["useToggler","defaultOnValue","useState","isToggledOn","setIsToggledOn","prev","defaultProps","propTypes","PropTypes","Accordion","children","title","className","open","isOpen","toggle","statusClassName","type","onClick","id","role","Hero","image","style","backgroundImage","Main","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}