{"version":3,"file":"static/js/589.f8410922.chunk.js","mappings":"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","sources":["hooks/useToggler.jsx","components/Accordion/Accordion.jsx","components/Error/Error.jsx","components/Main/Main.jsx","components/Carousel/Carousel.jsx","components/SimpleList/SimpleList.jsx","components/RatingItem/RatingItem.jsx","components/Rating/Rating.jsx","components/Host/Host.jsx","pages/Housing/Housing.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useState } from 'react'\n\n/**\n *\n * @param {boolean} defaultOnValue - Set the default state\n * @returns\n */\nfunction useToggler(defaultOnValue) {\n  const [isToggledOn, setIsToggledOn] = useState(defaultOnValue)\n\n  function toggle() {\n    setIsToggledOn((prev) => !prev)\n  }\n\n  return [isToggledOn, toggle]\n}\n\nexport default useToggler\n\nuseToggler.defaultProps = {\n  defaultOnValue: false,\n}\n\nuseToggler.propTypes = {\n  defaultOnValue: PropTypes.bool,\n}\n","import PropTypes from 'prop-types'\nimport useToggler from '../../hooks/useToggler'\nimport './Accordion.css'\nimport './Accordion-default-theme.css'\n\n/**\n *\n * @param {Object} props\n * @param {JSX.Element} props.children - The content to render inside the accordion panel.\n * @param {string} props.title - The title of the accordion. Will be the button text.\n * @param {string} props.className - A css class that can be added to the accordion.\n * @param {boolean} props.open - The accordion default state.\n * @returns\n */\nfunction Accordion({ children, title, className, open }) {\n  const [isOpen, toggle] = useToggler(open)\n  const statusClassName = isOpen ? 'accordion-open' : 'accordion-close'\n\n  return (\n    <div className={`accordion ${className}`}>\n      <button\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-controls={`${title}-panel`}\n        className={`accordion__button ${statusClassName}`}\n        onClick={toggle}\n        id={`${title}-title`}\n      >\n        {title}\n      </button>\n      <div\n        className=\"accordion__panel\"\n        id={`${title}-panel`}\n        role=\"region\"\n        aria-labelledby={`${title}-title`}\n      >\n        <div className=\"accordion__content\">{children}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Accordion\n\nAccordion.defaultProps = {\n  className: '',\n  open: false,\n}\n\nAccordion.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  open: PropTypes.bool,\n}\n","function Error() {\n  return <h3>Une erreur est survenue</h3>\n}\n\nexport default Error\n","import PropTypes from 'prop-types'\n\n/**\n *\n * @param {Object} props\n * @param {JSX.Element} props.children - The content to display inside the component\n * @param {String} props.className - A class to add to the component\n * @returns\n */\nfunction Main({ children, className }) {\n  return (\n    <main className={`main ${className}`} id=\"main\">\n      {children}\n    </main>\n  )\n}\n\nexport default Main\n\nMain.defaultProps = {\n  className: null,\n}\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n}\n","import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport './Carousel.css'\nimport './Carousel-default-theme.css'\n\n/**\n *\n * @param {Object} props\n * @param {string} props.className - A css class that can be added to the carousel.\n * @param {boolean} props.pictures - An array of links to images.\n * @returns\n */\nfunction Carousel({ className, pictures }) {\n  const [current, setCurrent] = useState(0)\n  const [currents, setCurrents] = useState([0])\n  const { length } = pictures\n\n  useEffect(() => {\n    if (length > 2) {\n      if (current === 0) setCurrents([length - 1, current, current + 1])\n      else if (current === length - 1) setCurrents([current - 1, current, 0])\n      else setCurrents([current - 1, current, current + 1])\n    } else if (length === 2) setCurrents([current, current + 1])\n    else setCurrents([current])\n  }, [current, length])\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1)\n  }\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1)\n  }\n\n  const pictureElements = currents.map((value) => (\n    <div className=\"carousel__item\" key={`carousel-${pictures[value]}`}>\n      <img className=\"carousel__img\" src={pictures[value]} alt=\"\" />\n    </div>\n  ))\n\n  return (\n    <div className={`carousel ${className}`}>\n      {pictureElements}\n      <button\n        type=\"button\"\n        onClick={prevSlide}\n        className=\"carousel__btn carousel__btn-prev\"\n      >\n        <span className=\"carousel__btn__text\">previous picture</span>\n      </button>\n      <button\n        type=\"button\"\n        onClick={nextSlide}\n        className=\"carousel__btn carousel__btn-next\"\n      >\n        <span className=\"carousel__btn__text\">next picture</span>\n      </button>\n    </div>\n  )\n}\n\nexport default Carousel\n\nCarousel.defaultProps = {\n  className: '',\n}\n\nCarousel.propTypes = {\n  className: PropTypes.string,\n  pictures: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n","/* eslint react/no-array-index-key: \"off\" */\nimport PropTypes from 'prop-types'\nimport './SimpleList.css'\n\n/**\n *\n * @param {Object} props\n * @param {array} props.array - An array of element to break down into a list. Be careful that the index is use as a key. https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-array-index-key.md\n * @param {string} props.theme - Add a css class for the theme.\n * @param {string} props.listClassName - Add a css class for styling the list\n * @param {string} props.itemClassName - Add a css class for styling the list items\n * @returns\n */\nfunction SimpleList({ array, theme, listClassName, itemClassName }) {\n  const listItemElements = array.map((item, index) => (\n    <li\n      key={`listItem-${index}`}\n      className={`simple-list__item ${itemClassName}`}\n    >\n      {item}\n    </li>\n  ))\n  return (\n    <ul className={`simple-list ${theme} ${listClassName}`}>\n      {listItemElements}\n    </ul>\n  )\n}\n\nexport default SimpleList\n\nSimpleList.defaultProps = {\n  theme: 'simple-list--default',\n  listClassName: null,\n  itemClassName: null,\n}\n\nSimpleList.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  theme: PropTypes.string,\n  listClassName: PropTypes.string,\n  itemClassName: PropTypes.string,\n}\n","import PropTypes from 'prop-types'\nimport './RatingItem.css'\n\n/**\n *\n * @param {Object} props\n * @param {number} props.value - The rating value as a string\n * @param {String} props.checked - Set the status of the radio input\n * @param {String} props.visualyCheck - Needed for styling\n * @param {String} props.handleRating - The function that change the state of the component\n * @returns\n */\nfunction RatingItem({ value, checked, visualyCheck, handleRating }) {\n  return (\n    <label className=\"rating-star__form-control\">\n      <input\n        className=\"rating-star__input\"\n        name=\"rating\"\n        type=\"radio\"\n        value={parseInt(value, 10)}\n        checked={checked}\n        data-visualycheck={visualyCheck}\n        onChange={handleRating}\n      />\n      <span className=\"rating__text\">\n        {value > 1 ? `${value} stars` : '1 star'}\n      </span>\n    </label>\n  )\n}\n\nexport default RatingItem\n\nRatingItem.propTypes = {\n  value: PropTypes.number.isRequired,\n  checked: PropTypes.bool.isRequired,\n  visualyCheck: PropTypes.bool.isRequired,\n  handleRating: PropTypes.func.isRequired,\n}\n","import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport RatingItem from '../RatingItem/RatingItem'\n\n/**\n *\n * @param {Object} props\n * @param {string} props.rating - The rating value as a string\n * @param {String} props.className - A class to add to the component\n * @returns\n */\nfunction Rating({ rating, className }) {\n  const [ratingValue, setRatingValue] = useState(rating)\n\n  function handleRating(value) {\n    setRatingValue(value)\n  }\n\n  function createRatingElements(value) {\n    const maxRating = 5\n    const ratingElements = []\n\n    for (let i = 1; i <= maxRating; i += 1) {\n      const checked = i === value\n      const visualyCheck = i <= value\n\n      ratingElements.push(\n        <RatingItem\n          key={`ratingItem-${i}`}\n          value={i}\n          checked={checked}\n          visualyCheck={visualyCheck}\n          handleRating={() => handleRating(i)}\n        />\n      )\n    }\n\n    return ratingElements\n  }\n\n  const ratingElements = createRatingElements(ratingValue)\n\n  return (\n    <fieldset className={`${className}`}>\n      <legend className=\"rating__legend\">Votre note:</legend>\n      {ratingElements}\n    </fieldset>\n  )\n}\n\nexport default Rating\n\nRating.defaultProps = {\n  className: null,\n}\n\nRating.propTypes = {\n  rating: PropTypes.string.isRequired,\n  className: PropTypes.string,\n}\n","import PropTypes from 'prop-types'\nimport './Host.css'\n\n/**\n *\n * @param {Object} props\n * @param {Object} props.host\n * @param {String} props.host.name - The name of the host\n * @param {String} props.host.picture - A link to the host picture\n *  @param {String} props.className - A class to add to the component\n * @returns\n */\nfunction Host({ host, className }) {\n  return (\n    <div className={`host ${className}`}>\n      <p className=\"host__name\">{host.name}</p>\n      <img className=\"host__photo\" src={host.picture} alt=\"\" />\n    </div>\n  )\n}\n\nexport default Host\n\nHost.defaultProps = {\n  className: '',\n}\n\nHost.propTypes = {\n  className: PropTypes.string,\n\n  host: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n  }).isRequired,\n}\n","import { useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { HousingContext } from '../../contexts/HousingContext'\nimport Main from '../../components/Main/Main'\nimport Carousel from '../../components/Carousel/Carousel'\nimport SimpleList from '../../components/SimpleList/SimpleList'\nimport Rating from '../../components/Rating/Rating'\nimport Host from '../../components/Host/Host'\nimport Accordion from '../../components/Accordion/Accordion'\nimport Spinner from '../../components/Spinner/Spinner'\nimport Error from '../../components/Error/Error'\nimport './Housing.css'\n\nfunction Housing() {\n  const { data, loading, error } = useContext(HousingContext)\n  const { id } = useParams()\n\n  if (loading) {\n    return <Spinner>Loading...</Spinner>\n  }\n\n  if (error) {\n    return <Error error={error} />\n  }\n\n  const housing = data?.find((item) => item.id === id)\n\n  return (\n    <Main className=\"housing__page\">\n      <Carousel className=\"housing__carousel\" pictures={housing.pictures} />\n      <h1 className=\"housing__title\">{housing.title}</h1>\n      <p className=\"housing__location\">{housing.location}</p>\n      <SimpleList\n        array={housing.tags}\n        theme=\"tags-theme\"\n        listClassName=\"housing__taglist\"\n      />\n      <Rating className=\"housing__rating\" rating={housing.rating} />\n      <Host host={housing.host} />\n      <Accordion\n        className=\"housing__accordion housing__description\"\n        title=\"Description\"\n      >\n        <p>{housing.description}</p>\n      </Accordion>\n      <Accordion\n        className=\"housing__accordion housing__equipments\"\n        title=\"Equipements\"\n      >\n        <SimpleList\n          array={housing.equipments}\n          listClassName=\"housing__equipments__list\"\n        />\n      </Accordion>\n    </Main>\n  )\n}\n\nexport default Housing\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["useToggler","defaultOnValue","useState","isToggledOn","setIsToggledOn","prev","defaultProps","propTypes","PropTypes","Accordion","children","title","className","open","isOpen","toggle","statusClassName","type","onClick","id","role","Main","Carousel","pictures","current","setCurrent","currents","setCurrents","length","useEffect","pictureElements","map","value","src","alt","SimpleList","array","theme","listClassName","itemClassName","listItemElements","item","index","checked","visualyCheck","handleRating","name","parseInt","onChange","Rating","rating","ratingValue","setRatingValue","ratingElements","i","push","createRatingElements","Host","host","picture","useContext","HousingContext","data","loading","error","useParams","Spinner","Error","housing","find","location","tags","description","equipments","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}